@using ProducerInterfaceCommon.ContextModels
@model UserEdit

@{
  ViewBag.Title = $"Редактирование пользователя {Model.Name}";
  Layout = "~/Views/Shared/_MasterPage.cshtml";
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm())
{
@Html.HiddenFor(m => m.Id)
<div class="row">
    <div class="col-md-12">
        @if (Model.Status == UserStatus.Request)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Message)
                <br/>
                @Html.DisplayFor(m => m.Message)
            </div>
        }
       <div class="form-group">
            @Html.LabelFor(m => m.AccountGroupIds)
            <br/>
            @Html.ListBoxFor(m => m.AccountGroupIds, new MultiSelectList(Model.AllAccountGroup, "Value", "Text", Model.AccountGroupIds), new { style = "display: none;" })
            <br />
            @Html.ValidationMessageFor(m => m.AccountGroupIds)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AppointmentId)
            @Html.DropDownListFor(m => m.AppointmentId, Model.AllAppointment, new { @class = "form-control mw500" })
            @Html.ValidationMessageFor(m => m.AppointmentId)
        </div>
        <div class="form-group">
            <div>@Html.LabelFor(m => m.AccountRegionIds)</div>
            <div class="row">
                @for (int i = 0; i < Model.AllAccountRegion.Count; i++)
                {
                    var r = Model.AllAccountRegion[i];
                    <div class="col-md-4">
                        <input type="checkbox" name="AccountRegionIds" value="@r.Value"
                            @{if (r.Selected) { <text> checked='checked' </text> } } />
                        <span>@r.Text</span>
                    </div>
                }
            </div>
            @Html.ValidationMessageFor(m => m.AccountRegionIds)
        </div>
        <div class="form-group">
	        <input type="submit" class="btn btn-primary" value="Сохранить изменения"/>
					@if (Model.Status == UserStatus.Request) {
						<input type="submit" class="btn btn-primary" value="Активировать" name="activate" />
						<input type="submit" class="btn btn-warning" data-toggle="modal" data-target="#reject-request" value="Заблокировать" />
					} else if (Model.Status == UserStatus.Active || Model.Status == UserStatus.New) {
						<input type="submit" class="btn btn-warning" value="Заблокировать" name="block" />
					} else if (Model.Status == UserStatus.Blocked) {
						<input type="submit" class="btn btn-primary" value="Активировать" name="activate" />
					}
        </div>
    </div>
</div>
}

<div id="reject-request" class="modal fade" role="dialog">
	@using (Html.BeginForm("RejectRegistration", "PermissionUser", FormMethod.Post)) {
		@Html.Hidden("id", Model.Id)
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h3>Отказ в регистрации</h3>
				</div>
				<div class="modal-body" id="result">
					<div class="form-group">
						<label>Укажите причину</label>
						<textarea class="form-control" rows="3" name="reject-reason"></textarea>
					</div>
				</div>
					<div class="modal-footer">
						<div class="btn btn-group btn-group-sm">
							<button type="submit" class="btn btn-warning">Отказать</button>
						</div>
					</div>
			</div>
		</div>
	}
</div>


@section scripts
{
	<script src="~/Content/Chosen/js/chosen.jquery.js"></script>
	<link href="~/Content/Chosen/css/chosen.css" rel="stylesheet" />
	<script type="text/javascript">
		$(function () {
			$('#AccountGroupIds').chosen({ width: '100%' });

		});
	</script>
}