@using Quartz.Job.Models
@model IEnumerable<Quartz.Job.EDM.jobextend>

@using (Html.BeginForm("AddJob", "Report", FormMethod.Get)) {
    <fieldset>
        <span>Новый отчёт</span>
        @Html.DropDownList("id", EnumHelper.GetSelectList(typeof(Reports)))
        <input id="btn" type="submit" value="Создать" />
    </fieldset>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CustomName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Scheduler)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReportTypeEnum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Creator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastModified)
        </th>
        <th>Действия</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CustomName)
        </td>
        <td>
            @Html.ActionLink(item.Scheduler, "ScheduleJob", new { jobName = item.JobName, jobGroup = item.JobGroup })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReportTypeEnum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Creator)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModified)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { jobName = item.JobName, jobGroup = item.JobGroup }) |
            @Html.ActionLink("RunNow", "RunNow", new { jobName = item.JobName, jobGroup = item.JobGroup }) |
            @Html.ActionLink("Delete", "Delete", new { jobName = item.JobName, jobGroup = item.JobGroup })
            @*@Html.ActionLink("Restore", "Restore", new { jobName = item.JobName, jobGroup = item.JobGroup })*@
       </td>
    </tr>
}

</table>
