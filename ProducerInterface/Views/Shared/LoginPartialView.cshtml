@using ProducerInterfaceCommon.ContextModels
@model LoginValidation

<div class="dropdown-menu" id="autentificationForm">

    @using(Html.BeginForm("UserAuthentication", "Account", FormMethod.Post)) { 
        @Html.ValidationSummary(true)
        <div class="form-group-lg">            
            <div class="form-group">
                <div class="input-group" title="Email указанный при регистрации">
                    <i class="input-group-addon" id="login-view">Логин</i>  
                    @Html.TextBoxFor(model => model.login, null, new { @Name = "login", @class = "form-control col-sm-12 col-xs-12 col-md-12 col-lg-12", @placeholder = "Email" })                 
                </div>    
                @Html.ValidationMessageFor(model => model.login)
              
            </div>

            <div class="form-group">
                <div class="input-group" title="Пароль отправленный на вашу почту при регистрации">
                    <i class="input-group-addon">Пароль</i>         
                    @Html.TextBoxFor(model => model.password, null, new { @type = "password", @Name = "password", @class = "form-control col-sm-12 col-xs-12 col-md-12 col-lg-12"})

               
                </div>
                @Html.ValidationMessageFor(model => model.password)
            
            </div>

            <div class="form-group col-lg-12 col-sm-12 col-xs-12 col-md-12">

                <input type="submit" class="btn btn-primary col-lg-12 col-sm-12 col-xs-12 col-md-12" value="Войти" />
            </div>

            <div class="form-group">
                <center>
                    <a href="~/Account/PasswordRecovery">Забыли пароль?</a>
                    <br/>
                    <a href="~/Account/Index">Я ещё не регистрировался</a>
                </center>
            </div>
        </div>
   

    }
</div>                  
