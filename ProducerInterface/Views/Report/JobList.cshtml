@using ProducerInterfaceCommon.ContextModels
@model IEnumerable<jobextendwithproducer>


<div class="body-content">

     @{
        var listReport = new List<SelectListItem>();
        listReport.Add(new SelectListItem() { Text = "Выберите тип отчета, который вы хотите создать", Selected = true });
        listReport.AddRange(EnumHelper.GetSelectList(typeof(Reports)));

        var listCreator = new List<SelectListItem>();
        listCreator.Add(new SelectListItem() { Text = "Выберите создателя", Selected = true });
        listCreator.AddRange((List<SelectListItem>)ViewData["creators"]);
    }

    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm("AddJob", "Report", FormMethod.Get)) {
                <div class="form-group">
                    <h4>Создание нового отчета</h4>
                    @Html.DropDownList("id", listReport, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <input id="btn" type="submit" value="Создать" class="btn btn-primary" />
                </div>
            }
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm("JobList", "Report", FormMethod.Get)) {
                <div class="form-group">
                    <h4>По создателю</h4>
                    @Html.DropDownList("cid", listCreator, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <input id="btn" type="submit" value="Фильтровать" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
    <hr />

    @if (Model != null && Model.Count() > 0)
    {
        <div class="row">
            <div class="col-md-12">
                <h4>Список отчетов</h4>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered">
                    <tr>
                        <th class="th_275">
                            @Html.DisplayNameFor(model => model.CustomName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Scheduler)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ReportTypeEnum)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Creator)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LastModified)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LastRun)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DisplayStatusEnum)
                        </th>
                        <th>История запусков</th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="td_275">
                                @Html.DisplayFor(modelItem => item.CustomName)
                            </td>
                            <td>
                                @Html.ActionLink(item.Scheduler, "ScheduleJob", new { jobName = item.JobName, jobGroup = item.JobGroup })
                            </td>
                            <td>
                                <a href="@Url.Action("Edit", "Report", new { jobName = item.JobName, jobGroup = item.JobGroup })" title="Настройки и редактирование параметров отчета"><span class="glyphicon glyphicon-pencil"></span>&nbsp; ред.</a>
                                @Html.DisplayFor(modelItem => item.ReportTypeEnum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Creator)
                                (@Html.DisplayFor(modelItem => item.CreationDate))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastModified)
                            </td>
                            <td>
                                <a href="@Url.Action("RunNow", "Report", new { jobName = item.JobName, jobGroup = item.JobGroup })"><span class="glyphicon glyphicon-play" title="Разовое формирование отчета за истекшие периоды времени и даты"></span></a>
                                @Html.DisplayFor(modelItem => item.LastRun)
                            </td>
                            <td class="@(item.DisplayStatusEnum == DisplayStatus.Processed ? "processed" : "")" data-url="@(Url.Action("GetDisplayStatusJson", "Ajax", new { jobName = item.JobName }))">

                                @if (item.DisplayStatusEnum == DisplayStatus.Ready) {
                                    <a href="@Url.Action("DisplayReport", "Report", new { jobName = item.JobName })">
                                        @Html.DisplayFor(modelItem => item.DisplayStatusEnum)
                                    </a>}
                                else {
                                    @Html.DisplayFor(modelItem => item.DisplayStatusEnum)
                                }
                            </td>
                            <td>
                                @if (item.DisplayStatusEnum == DisplayStatus.New) {
                                    @Html.DisplayFor(modelItem => item.DisplayStatusEnum)
                                }
                                else {
                                    @Html.ActionLink("История запусков", "RunHistory", new { jobName = item.JobName })
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("Delete", "Report", new { jobName = item.JobName, jobGroup = item.JobGroup })" onclick="confirm('Вы уверены что хотите удалить отчет?')">
                                    <span class="glyphicon glyphicon-trash" title="Удалить отчет"></span>
                                </a>
                            </td>
                        </tr>
                     }
                </table>
            </div>
        </div>
    }
    else {
        <div class="row">
            <div class="col-md-12">
                <h4>Отчетов не найдено</h4>
            </div>
        </div>
    }
</div>

@section JavaScript {  
    <script src="~/Content/Chosen/js/initJobList.js"></script>
}


