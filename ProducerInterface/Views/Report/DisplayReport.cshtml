@using ProducerInterfaceCommon.ContextModels
@using System.Data
@model SendReport

@{
  var ds = (DataSet)ViewData["ds"];
  var headers = ds.Tables["Headers"];
  var data = ds.Tables["Data"];


  // лист всех вариантов для построения селекта
  var propList = (List<OptionElement>)ViewData["MailTo"];
  if (Model.MailTo != null && Model.MailTo.Count > 0)
  {
      // сохранённые email
      var propListVal = propList.Select(x => x.Value).ToList();
      // новые email из модели, возможно, невалидные
      var newMail = Model.MailTo.Where(x => !propListVal.Contains(x)).Select(x => new OptionElement() { Value = x, Text = x }).ToList();
      // добавили к сохранённым email новые
      propList.AddRange(newMail);
  }
  var asd = new MultiSelectList(propList, "Value", "Text", new List<string>() {"g.maksimenko@analit.net"});
  //var asd = new MultiSelectList(propList, "Value", "Text", Model.MailTo);

  // класс для ошибки валидации, если есть
  var errorClass = "";
  var state = ViewData.ModelState["MailTo"];
  if (state != null && state.Errors.Count > 0)
  {
      errorClass = " input-validation-error";
  }

}



<div class="body-content">
    <h2>@ViewBag.Title</h2>
    <div class="row">
        <div class="col-md-6">
            @Html.ActionLink("Сохранить в Excel", "GetFile", new { jobName = Model.jobName })
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.EditorFor(m => m.jobName)
                <div class="form-group form-group-otstup">
                    <label>Отправить на email</label>
                    <div class="input-group" class="@("input-group" + errorClass)">
                        @Html.ListBox("MailTo", asd@*, new { style = "display: none;" }*@)
                        <span class="input-group-btn">
                            <input type="submit" value="Отправить" class="btn btn-primary w150" />
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => Model.MailTo)
                </div>
                <div class="form-group form-group-otstup">
                    <label>Дополнительные email-адреса</label>
                    <div class="input-group">
                        @Html.TextBox("addMail", null, new { @class = "form-control", @placeholder = "Email" })
                        <span class="input-group-btn">
                            <input id="addBtn" name="addBtn" type="button" value="Добавить" class="btn btn-primary w150" />
                        </span>
                    </div>
                </div>
            }
        </div>
    </div>
    <hr/>
    <div class="row">
        <ul>
            @foreach (System.Data.DataRow row in headers.Rows)
            {
            <li>@row[0].ToString()</li>}
        </ul>

        <table border="1">
                <thead>
                    <tr>
                        @foreach (System.Data.DataColumn col in data.Columns)
                        {
                        <th>@col.Caption</th>}
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow row in data.Rows)
                    {
                    <tr>
                        @foreach (var cell in row.ItemArray)
                        {
                        <td>@cell.ToString()</td>}
                    </tr>}
                </tbody>
            </table>
    </div>
</div>

@section JavaScript {
    <link href="~/Content/Chosen/css/chosen.css" rel="stylesheet" />
    <script src="~/Content/Chosen/js/chosen.jquery.js"></script>
    <script src="~/Content/Chosen/js/initDisplayReport.js"></script>
}
