@using ProducerInterfaceCommon.CatalogModels
@model IEnumerable<Catalog>

@{
    var title = $"Формы выпуска и дозировки препарата {ViewData["familyName"]} в классификации АналитФармация";
    ViewBag.Title = title;
	var imageList = (Dictionary<long,int>)ViewBag.FormPicturesList;
}
<ol class="breadcrumb">
    <li>@Html.ActionLink("Наша продукция", "Index") </li>
    <li class="active">Формы выпуска и дозировки</li>
</ol>

<div class="row">
    <div class="col-md-12">
        <h3>@title</h3>
    </div>
</div>

@if (Model != null && Model.Any()) {
    <div class="row">
        <div class="col-md-12">
            <table id="FormsList" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="w20p">
                            @Html.DisplayNameFor(m => m.Name)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.VitallyImportant)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.MandatoryList)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.Narcotic)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.Toxic)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.Other)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.Combined)
                        </th>
                        <th class="w8p">
                            @Html.DisplayNameFor(m => m.Monobrend)
                            @ViewData["producerName"]
                        </th>
                        <th class="w24p">Свойства</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model) {
                        <tr>
                            <td style="white-space: nowrap">
                                <div class="listItem">
                                    <span>@Html.DisplayFor(modelItem => item.Name)</span>
                                    <a onclick="new modalPicture().SetModelData(this)" iUrl="@(
												imageList != null && imageList.ContainsKey(item.Id)?
												Url.Action("GetFile","MediaFiles",new { id=imageList[item.Id] }): Url.Content("~/Content/Image/no_image.png")
												)"  cId="@item.Id" pId="@ViewBag.producerId" dId="@ViewBag.familyId" data-toggle="modal" data-target="#PictureUploadModal" class="pointer">
                                        @if (imageList != null && imageList.ContainsKey(item.Id)) {
                                            <img src="@Url.Action("GetFile", "MediaFiles", new {id = imageList[item.Id]})" alt="изображение">
                                        } else {
                                            <img src="@Url.Content("~/Content/Image/no_image.png")" alt="изображение">
                                        }
                                    </a>
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.VitallyImportant)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MandatoryList)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Narcotic)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Toxic)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Other)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Combined)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Monobrend)
                            </td>
                            <td>
                                @foreach (var p in item.Products)
                                {
                                    <div>@p.Properties</div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <a href="@Url.Action("Index")"><span class="glyphicon glyphicon-chevron-left"></span> К списку препаратов</a>
        </div>
        <div class="col-md-6" style="text-align: right">
            <a href="@Url.Action("DisplayForms", new {id = ViewData["familyId"], edit = true})" class="btn btn-primary">Редактировать</a>
        </div>
    </div>

}
else {
    <div class="row">
        <b>@string.Format("Лекарственные формы {0} не найдены", ViewData["familyName"])</b>
    </div>
}

@Html.Partial("Partial/ModalPictureUpload")

@section JavaScript {
	<script src="@Url.Content("~/Scripts/WorkPlace/modalPictureUpload.js")"></script>
}