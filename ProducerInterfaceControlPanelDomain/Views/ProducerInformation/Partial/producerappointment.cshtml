@using ProducerInterfaceCommon.ContextModels
@{
    var AccountList = ViewBag.AccountList as IEnumerable<ProducerInterfaceCommon.ContextModels.Account>;
    var EnabledListProducer = ViewBag.EnabledListProducer as IEnumerable<ProducerInterfaceCommon.ContextModels.AccountAppointment>;
}

<input value="@ViewBag.AccountCompanyId" hidden="hidden" id="AccountCompanyId" />

<h2>Список должностей для @ViewBag.AccountCompanyname</h2>
<hr />

@if (ViewBag.Messages != null)
{<h3>@ViewBag.Messages</h3><hr />}


@if (EnabledListProducer != null && EnabledListProducer.Count() > 0)
{
    <div class="form-group">
        <select id="producerappointmentlist" class="form-control">
            @foreach (var AppointmentProducerItem in EnabledListProducer)
            {
                <option value="@AppointmentProducerItem.Id">@AppointmentProducerItem.Name ( @AccountList.Where(xxx => xxx.AccountAppointment.Id == AppointmentProducerItem.Id).Count() )</option>
            }
        </select>
    </div>
   
    <div class="form-group">
        <a class="btn btn-primary" onclick="DeleteProducerAppointment()">Удалить должность из списка данного производителя</a>
    </div>    
}
else
{
    <p>Список для данного производителя пуст</p>
}
<hr />
<div class="row">
    <div class="col-lg-8">
        <div class="input-group">
            <input name="addProducerAppointment" id="addProducerAppointment" type="text" class="form-control" placeholder="Название должности" />
            <span class="input-group-btn">
                <a class="btn btn-primary" onclick="AddProducerAppointment()">Добавить должность для данного производителя</a>
            </span>
        </div>
    </div>
</div>

