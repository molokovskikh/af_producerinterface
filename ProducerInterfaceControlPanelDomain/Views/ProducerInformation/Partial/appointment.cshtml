@using ProducerInterfaceCommon.ContextModels
@{
    var EnabledList = ViewBag.EnabledList as IEnumerable<ProducerInterfaceCommon.ContextModels.AccountAppointment>;
    var DisableList = ViewBag.DisabledList as IEnumerable<ProducerInterfaceCommon.ContextModels.AccountAppointment>;
    var AccountList = ViewBag.AccountList as IEnumerable<ProducerInterfaceCommon.ContextModels.Account>;
}

@if (ViewBag.Results != null)
{
    <div class="row">
        <h3>@ViewBag.Results</h3>
    </div>
}

<div class="row">

    <div class="col-xs-12">
        <br />
        <h4>Список должностей для всех производителей, у которых нет отдельного списка</h4>
        <hr />
        <div class="col-xs-12">
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Список доступных для выбора должностей</label>
                    <select id="active" class="form-control">
                        @foreach (var ActiveItem in EnabledList)
            {
                            <option value="@ActiveItem.Id">@ActiveItem.Name ( @AccountList.Where(xxx => xxx.AccountAppointment == ActiveItem).Count() )</option>
                        }
                    </select>
                </div>
                <hr />
                <div class="form-group">
                    <a class="btn btn-primary" onclick="ActivateDeactivete(0)">Убрать из списка выбранную должность</a>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    <label>Список долностей которые вводили пользователи</label>
                    <select id="inactive" class="form-control">
                        @foreach (var NotActiveItem in DisableList)
                        {
                            <option value="@NotActiveItem.Id">@NotActiveItem.Name ( @AccountList.Where(xxx => xxx.AccountAppointment == NotActiveItem).Count() )</option>
                        }
                    </select>
                </div>
                <hr />
                <div class="form-group">
                    <a class="btn btn-primary" onclick="ActivateDeactivete(1)">Добавить в список выбранную должность</a>
                </div>
            </div>
        </div>
        <hr />
        <div class="col-xs-12">
            <div class="col-xs-12">
                @using (Ajax.BeginForm("AddNewAppointment", "ProducerInformation", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "replacecontent" }))
                {
                    <div class="form-group">
                        <label>Добавить новый вариант должности для выбора</label>

                        <div class="row">
                            <div class="col-lg-6">
                                <div class="input-group">
                                    <input type="text" class="form-control" id="NewAppointmentname" name="NewAppointmentname" placeholder="Название должности">
                                    <span class="input-group-btn">
                                        <input class="btn btn-primary" type="submit" value="Добавить должность" />
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
